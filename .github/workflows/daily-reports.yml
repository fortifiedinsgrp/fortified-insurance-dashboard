name: Daily Report Scheduler

on:
  schedule:
    # Run at 8:00 AM UTC daily (adjust timezone as needed)
    - cron: '0 8 * * *'
  workflow_dispatch:  # Allows manual triggering for testing

jobs:
  send-reports:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create secrets file
      run: |
        mkdir -p .streamlit
        cat > .streamlit/secrets.toml << EOF
        SPREADSHEET_ID = "${{ secrets.SPREADSHEET_ID }}"
        
        [gcp_service_account]
        type = "${{ secrets.GCP_TYPE }}"
        project_id = "${{ secrets.GCP_PROJECT_ID }}"
        private_key_id = "${{ secrets.GCP_PRIVATE_KEY_ID }}"
        private_key = """${{ secrets.GCP_PRIVATE_KEY }}"""
        client_email = "${{ secrets.GCP_CLIENT_EMAIL }}"
        client_id = "${{ secrets.GCP_CLIENT_ID }}"
        auth_uri = "${{ secrets.GCP_AUTH_URI }}"
        token_uri = "${{ secrets.GCP_TOKEN_URI }}"
        auth_provider_x509_cert_url = "${{ secrets.GCP_AUTH_PROVIDER_X509_CERT_URL }}"
        client_x509_cert_url = "${{ secrets.GCP_CLIENT_X509_CERT_URL }}"
        universe_domain = "googleapis.com"
        EOF
        
    - name: Configure email settings
      run: |
        python << EOF
        import json
        import os
        
        # Create email settings for the scheduler
        settings = {
            "email_settings": {
                "smtp_server": "${{ secrets.SMTP_SERVER }}",
                "smtp_port": ${{ secrets.SMTP_PORT }},
                "use_tls": True,
                "sender_email": "${{ secrets.SENDER_EMAIL }}",
                "sender_password": "${{ secrets.SMTP_PASSWORD }}",
                "sender_name": "${{ secrets.SENDER_NAME }}"
            }
        }
        
        with open('settings.json', 'w') as f:
            json.dump(settings, f, indent=2)
        EOF
        
    - name: Check for due reports and send
      run: |
        echo "ğŸš€ Checking for due reports..."
        python standalone_scheduler.py --status
        echo "ğŸ“§ Running scheduler to send any due reports..."
        python standalone_scheduler.py
        echo "âœ… Scheduler run completed" 